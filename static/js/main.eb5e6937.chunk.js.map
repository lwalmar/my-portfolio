{"version":3,"sources":["components/Common/Icon/icons/info.svg","components/Common/Icon/icons/gear.svg","components/Common/Icon/icons/portfolio.svg","components/Common/Icon/icons/arrow-up.svg","components/Common/Icon/icons/arrow-down.svg","components/Common/Icon/icons/market.svg","components/Common/Icon/icons/discussion.svg","components/Common/Icon/icons/edit.svg","components/Common/Icon/icons/calendar-picker--cross.svg","components/Common/ButtonSquare/index.js","components/Common/ButtonCircle/index.js","components/Common/Icon/index.jsx","components/Header/index.js","components/CostContainer/index.js","components/Common/LoadingSpinner/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ButtonSquare","width","children","className","length","diameter","style","height","borderRadius","GLYPHS","INFO","require","GEAR","PORTFOLIO","ARROW_UP","ARROW_DOWN","MARKET","DISCUSSION","EDIT","CALENDAR1","Icon","dataId","glyph","iconWrapper","data-id","svgIcon","stroke","xlinkHref","id","defaultProps","strokeWidth","VIEW_LABEL","Header","viewActive","viewAvailable","onChangeView","console","log","ButtonCircle","map","view","classNames","onClick","CostContainer","isins","isin","LoadingSpinner","VIEW_AVAILABLE","App","useState","setIsins","setView","isLoading","setIsLoading","useEffect","a","Promise","resolve","error","setTimeout","result","fetchData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.eb5e6937.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/info.9921c1cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/gear.ceb2a391.svg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.511396e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-up.632f305d.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.562e58f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/market.48cc9e17.svg\";","module.exports = __webpack_public_path__ + \"static/media/discussion.41204492.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.ba020940.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar-picker--cross.d88a56dc.svg\";","import React, {Component} from 'react';\nimport './style.css';\n\nconst ButtonSquare = ({\n  width,\n  children\n}) => (\n  <div\n    className=\"buttonSquare\"\n    width={width}\n    length={width}\n  >\n    {children}\n  </div>\n);\n\nexport default ButtonSquare;\n","import React, {Component} from 'react';\nimport './style.css';\n\nconst ButtonSquare = ({\n  diameter,\n  children\n}) => (\n  <div\n    className=\"buttonCircle\"\n    style={{height: diameter, width: diameter, borderRadius: diameter}}\n  >\n    {children}\n  </div>\n);\n\nexport default ButtonSquare;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport style from './style.css';\n\n/* eslint-disable global-require, max-len */\nexport const GLYPHS = {\n  INFO: require('./icons/info.svg'),\n  GEAR: require('./icons/gear.svg'),\n  PORTFOLIO: require('./icons/portfolio.svg'),\n  ARROW_UP: require('./icons/arrow-up.svg'),\n  ARROW_DOWN: require('./icons/arrow-down.svg'),\n  MARKET: require('./icons/market.svg'),\n  DISCUSSION: require('./icons/discussion.svg'),\n  EDIT: require('./icons/edit.svg'),\n  CALENDAR1: require('./icons/calendar-picker--cross.svg')\n};\n/* eslint-enable global-require, max-len */\n\nconst Icon = ({\n  dataId,\n  glyph,\n  height,\n  width\n}) => (\n  <div\n    className={style.iconWrapper}\n    data-id={dataId}\n  >\n    <svg\n      className={style.svgIcon}\n      height={height}\n      stroke={null}\n      width={width}\n    >\n      <use xlinkHref={`#${glyph.id}`} />\n    </svg>\n  </div>\n);\n\nIcon.propTypes = {\n  dataId: PropTypes.string,\n  glyph: PropTypes.shape({\n    id: PropTypes.string\n  }).isRequired,\n  height: PropTypes.string.isRequired,\n  strokeWidth: PropTypes.string,\n  width: PropTypes.string.isRequired\n};\n\nIcon.defaultProps = {\n  dataId: null,\n  strokeWidth: null\n};\n\nexport default Icon;\n","import React, {Component} from 'react';\nimport ButtonSquare from '../Common/ButtonSquare';\nimport ButtonCircle from '../Common/ButtonCircle';\nimport Icon, {GLYPHS} from '../Common/Icon';\nimport './style.css';\nimport classNames from 'classnames';\n\nconst VIEW_LABEL = {\n  'cost': 'Стоимость',\n  'yield': 'Доходноть',\n  'rating': 'Рейтинг',\n  'payment': 'Выплаты'\n};\n\nconst Header = ({\n  viewActive,\n  viewAvailable,\n  onChangeView\n}) => {\n  console.log('GLYPHS', GLYPHS)\n  return (\n  <div className=\"header\">\n    <div className=\"header_wrapper\">\n      <div className=\"header_settings\">\n        <ButtonSquare >\n          <Icon\n            glyph={GLYPHS.INFO}\n            height={30}\n            width={30}\n          />\n        </ButtonSquare>\n        <ButtonSquare>\n          <Icon\n            glyph={GLYPHS.PORTFOLIO}\n            height={30}\n            width={30}\n          />\n        </ButtonSquare>\n      </div>\n      <div className=\"header_info\">\n        <div className=\"headerInfo_total\">{\"937 584,00 ₽\"}</div>\n        <div className=\"headerInfo_inDetail\">\n          <div className=\"headerInfo_yieldInPercent\">{\"17,14 %\"}</div>\n          <div className=\"headerInfo_yieldInCcy\">{\"27370,71 ₽\"}</div>\n          <div className=\"headerInfo_time\">\n            {\"24 часа\"}\n            <span className=\"headerInfoTime_icon\">\n              <ButtonCircle>\n                <Icon\n                  glyph={GLYPHS.CALENDAR1}\n                  height={25}\n                  width={25}\n                />\n              </ButtonCircle>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"header_view\">\n      <div className=\"header_viewList\">\n        <div className=\"header_viewList_content\">\n          {viewAvailable.map((view) => (\n            <div\n              className={classNames(\n                'header_viewItem',\n                {'active': view === viewActive}\n                )}\n              onClick={() => onChangeView(view)}\n            >\n              {VIEW_LABEL[view]}\n            </div>))}\n        </div>\n      </div>\n    </div>\n  </div>\n)};\n\nexport default Header;\n","import React, {Component} from 'react';\nimport ButtonSquare from '../Common/ButtonSquare';\nimport ButtonCircle from '../Common/ButtonCircle';\nimport Icon, {GLYPHS} from '../Common/Icon';\nimport './style.css';\nimport classNames from 'classnames';\n\nconst CostContainer = ({\n  isins\n}) => {\n  return (\n    <div className=\"costContainer\">\n      <div className=\"costContainer_wrapper\">\n        {isins.map((isin) => (\n          <div\n            className='costContainerItem'\n            onClick={() => null}\n          >\n            <div className='costContainerItem_wrapper'>\n              <div className='costContainerItem_logo'>\n                <ButtonCircle\n                  diameter={'45px'}\n                />\n              </div>\n              <div className='costContainerItem_info'>\n                <div className='costContainerItemInfo_title'>\n                  <div>{'Альфа Банк'}</div>\n                  <div>{'101,58 %'}</div>\n                </div>\n                <div className='costContainerItemInfo_values'>\n                  <div>{'02.02.2022'}</div>\n                  <div>{'10833,35 ₽'}</div>\n                  <div>{'12,42 %'}</div>\n                </div>\n              </div>\n            </div>\n          </div>))};\n      </div>\n    </div>\n)};\n\nexport default CostContainer;\n","import React from 'react';\nimport styles from './style.css';\n\nconst LoadingSpinner = () => (\n  <div\n    className=\"messageCover_spinner\"\n  >\n    <div className=\"messageCover_dot\" />\n    <div className=\"messageCover_dot\" />\n    <div className=\"messageCover_dot\" />\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport CostContainer from './components/CostContainer';\nimport LoadingSpinner from './components/Common/LoadingSpinner';\n\nconst loadData = () => new Promise((resolve, error) => setTimeout(() => resolve(['isin1', 'isin2', 'isin3', 'isin1', 'isin2', 'isin3', 'isin1', 'isin2', 'isin3']), 500))\n\nconst VIEW_AVAILABLE = [\n  'cost',\n  'yield',\n  'rating',\n  'payment'\n];\n\nfunction App() {\n  const [isins, setIsins] = useState([]);\n  const [view, setView] = useState('cost');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const result = await loadData();\n      setIsins(result);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, ['']);\n\n  return (\n    <div className=\"myPortfolio\">\n      {isLoading ? (\n        <div className=\"myPortfolio_loading\">\n          <LoadingSpinner />\n        </div>\n      ) : (\n        <Fragment>\n          <Header\n            viewActive={view}\n            viewAvailable={VIEW_AVAILABLE}\n            onChangeView={(view) => setView(view)}\n          />\n          {\n            view === 'cost' && <CostContainer isins={isins} />}\n        </Fragment>\n      )}\n    </div>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}